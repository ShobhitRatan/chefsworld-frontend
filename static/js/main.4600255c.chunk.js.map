{"version":3,"sources":["components/SignupForm.jsx","components/Home.jsx","ProfileComponents/AddressForm.jsx","ProfileComponents/EditAddressForm.jsx","ProfileComponents/Address.jsx","ProfileComponents/WorkExperienceForm.jsx","ProfileComponents/EditWorkExperienceForm.jsx","ProfileComponents/WorkExperience.jsx","ProfileComponents/EducationForm.jsx","ProfileComponents/EditEducationForm.jsx","ProfileComponents/Education.jsx","ProfileComponents/AwardForm.jsx","ProfileComponents/EditAwardForm.jsx","ProfileComponents/Award.jsx","ProfileComponents/EditUserForm.jsx","ProfileComponents/ProfileContainer.jsx","components/NavBar.jsx","components/LoginForm.jsx","RecipesComponents/SearchBar.jsx","CommentsComponents/Comment.jsx","CommentsComponents/CommentForm.jsx","RecipesComponents/EditRecipeForm.jsx","RecipesComponents/Recipe.jsx","RecipesComponents/FilteredRecipesContainer.jsx","RecipesComponents/Filter.jsx","RecipesComponents/RecipeForm.jsx","RecipesComponents/RecipesContainer.jsx","App.js","index.js"],"names":["SignupForm","state","name","email","password","image_1","image_2","handleSubmit","e","preventDefault","props","handleChange","target","value","setState","this","Form","onSubmit","Group","controlId","Label","Control","onChange","type","Button","variant","Component","Home","className","Card","Title","Img","src","alt","AddressForm","address_type","address","city","country","zipcode","addAddress","placeholder","EditAddressForm","id","updateAddress","persist","prevState","Address","displayAddress","handleDisplayAddress","val","handleDelete","deleteAddress","CardDeck","Body","Text","key","onClick","WorkExperienceForm","chef_type","experience","employer_name","start_date","end_date","current_workplace","title","description","addExperience","as","rows","EditWorkExperienceForm","work_experience","updateExperience","WorkExperience","displayExperience","handleDisplayExperience","deleteExperience","EducationForm","entry_date","enrollment_status","addEducation","EditEducationForm","education","updateEducation","Education","displayEducation","handleDisplayEducation","deleteEducation","AwardForm","received_date","addAward","EditAwardForm","award","updateAward","Award","displayAward","handleDisplayAward","deleteAward","EditUserForm","user","updateUser","addresses_url","experiences_url","educations_url","awards_url","ProfileContainer","displayUser","displayImage","handleDisplayImage","handleDisplayUser","fetch","method","headers","Accept","token","body","JSON","stringify","then","res","json","newlyCreatedAddress","addOneAddress","newlyCreatedExperience","addOneExperience","newlyCreatedEducation","addOneEducation","newlyCreatedAward","addOneAward","updatedAddressObject","updateOneAddress","updatedWorkExperienceObject","updateOneExperience","updatedEducationObject","updateOneEducation","updatedAwardObject","updateOneAward","deletedAddress","deleteAddressFromUser","deletedWorkExperience","deleteWorkExperienceFromUser","deletedEducation","deleteEducationFromUser","deletedAward","deleteAwardFromUser","Image","thumbnail","addresses","map","educations","work_experiences","awards","NavBar","Nav","fill","defaultActiveKey","Item","to","clickHandler","LoginForm","SearchBar","searchTerm","Comment","display","handleDisplay","handleLike","increaseLikes","comment","deleteComment","recipe","label","content","likes","CommentForm","addComment","user_id","userId","recipe_id","recipeId","EditRecipeForm","cuisine","meal","dish","ingredients","image_url","source","source_url","diet_labels","health_labels","cautions","updateRecipe","console","log","Recipe","showSource","commentDisplay","handleClick","handleCommentDisplay","deleteRecipe","Link","href","split","ingredient","ListGroup","diet_label","caution","comments","FilteredRecipesContainer","recipes","Filter","handleSelection","RecipeForm","addRecipe","recipes_url","comments_url","RecipesContainer","receivedData","axios","get","data","pageCount","Math","ceil","length","perPage","cuisineFilter","filter","mealFilter","filteredRecipes","toLowerCase","includes","slicedRecipes","slice","offset","undefined","handlePageClick","selectedPage","selected","currentPage","handleSearch","newRecipes","newRecipe","find","push","removeDeletedComment","foundRecipe","r","commentIndex","findIndex","splice","bind","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","users_url","App","users","handleLoginSubmit","userInfo","handleResponse","handleRegisterSubmit","updatedUserObject","updateOneUser","updatedOneUser","updatedUserInstance","newUsers","resp","localStorage","setItem","history","renderForm","routerProps","location","pathname","newAddresses","newUser","newWorkExperiences","newEducations","newAwards","updatedAddressInstance","updatedWorkExperienceInstance","updatedEducationInstance","updatedAwardInstance","idFromChild","renderProfile","logOutHandler","removeItem","getItem","Authorization","Jumbotron","Container","path","render","exact","component","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4600255c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button' \nclass SignupForm extends Component {\n\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\", \n    image_1: \"\", \n    image_2: \"\"\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.handleSubmit(this.state)\n  }\n\n  handleChange = (e) => {\n    let {name, value} = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    let {name, email, password, image_1, image_2} = this.state\n\n    return (\n      <Form onSubmit={this.handleSubmit}> \n        <h1>Registration Form</h1> \n        <Form.Group controlId=\"formGroupName\">\n            <Form.Label>Name</Form.Label> \n            <Form.Control onChange={this.handleChange} type=\"text\"  name=\"name\" value={name} /> \n        </Form.Group>\n        <Form.Group controlId=\"formGroupUsername\">\n          <Form.Label>Username(email): </Form.Label> \n          <Form.Control onChange={this.handleChange} type=\"text\"  name=\"email\" value={email} /> \n        </Form.Group>\n        <Form.Group controlId=\"formGroupPassword\">\n          <Form.Label>Password</Form.Label> \n          <Form.Control onChange={this.handleChange} type=\"password\" name=\"password\" value={password} />\n        </Form.Group>\n        <Form.Group controlId=\"formGroupImage1\">\n          <Form.Label>Image 1</Form.Label> \n          <Form.Control onChange={this.handleChange} type=\"text\" name=\"image_1\" value={image_1} />\n        </Form.Group>\n        <Form.Group controlId=\"formGroupImage1\">\n          <Form.Label>Image 2</Form.Label> \n          <Form.Control onChange={this.handleChange} type=\"text\" name=\"image_2\" value={image_2} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    );\n  }\n\n}\n\nexport default SignupForm;\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nconst Home = () => {\n    return (\n        <div className=\"container\">\n            <Card className=\"bg-light text-blue\">\n                <Card.Title>Where you can find mouth watering recipes from the comfort of your home.</Card.Title>\n                <Card.Img src=\"https://i1.wp.com/worldscholarshipforum.com/wp-content/uploads/2019/11/become-chef-school-salary-scaled-scaled.jpg?fit=1920%2C1280&ssl=1\" alt=\"Chefs\" /> \n            </Card>\n        </div>\n    )\n}\n\nexport default Home ","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button' \n\nclass AddressForm extends Component {\n    state = {\n        address_type: '',\n        address: '',\n        city: '',\n        state: '',\n        country: '',\n        zipcode: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.addAddress({\n            address_type: e.target.address_type.value,     \n            address: e.target.address.value, \n            city: e.target.city.value, \n            state: e.target.state.value, \n            country: e.target.country.value, \n            zipcode: e.target.zipcode.value \n        })\n        this.setState({\n            address_type: '',\n            address: '',\n            city: '',\n            state: '',\n            country: '',\n            zipcode: ''\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value \n        })\n    }\n\n    render() {\n        const {address_type, address, city, state, country, zipcode} = this.state \n        return (\n            <Form onSubmit={e => this.handleSubmit(e)} >\n                <Form.Group controlId=\"formGroupAddress\">\n                    <Form.Label>Address</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your address\" name=\"address\" value={address} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupAddressType\">\n                    <Form.Label>Address Type</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the address type\" name=\"address_type\" value={address_type} /> \n                </Form.Group> \n                <Form.Group controlId=\"formGroupCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your city\" name=\"city\" value={city} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your state\" name=\"state\" value={state} />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupCountry\">\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your country\" name=\"country\" value={country} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupZipcode\">\n                    <Form.Label>Zipcode</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your zipcode\" name=\"zipcode\" value={zipcode} /> \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nexport default AddressForm ","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button' \n\nclass EditAddressForm extends Component {\n    state = {\n        address: {\n            id: this.props.address.id,\n            address_type: this.props.address.address_type,\n            address: this.props.address.address,\n            city: this.props.address.city,\n            state: this.props.address.state,\n            country: this.props.address.country,\n            zipcode: this.props.address.zipcode\n        }\n        \n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.updateAddress(this.state.address) \n\n    }\n\n    handleChange = (e) => {\n        e.persist(); \n\n        this.setState(prevState => ({\n            address: {...prevState.address, [e.target.name]: e.target.value}\n        }))\n    } \n\n    render() {\n        const {address_type, address, city, state, country, zipcode} = this.state.address \n        return (\n            <Form onSubmit={e => this.handleSubmit(e)}>\n                <Form.Group controlId=\"formGroupAddressType\">\n                    <Form.Label>Address Type</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the address type\" name=\"address_type\" value={address_type} /> \n                </Form.Group> \n                <Form.Group controlId=\"formGroupAddress\">\n                    <Form.Label>Address</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your address\" name=\"address\" value={address} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your city\" name=\"city\" value={city} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your state\" name=\"state\" value={state} />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupCountry\">\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your country\" name=\"country\" value={country} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupZipcode\">\n                    <Form.Label>Zipcode</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your zipcode\" name=\"zipcode\" value={zipcode} /> \n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nexport default EditAddressForm ","import React, {Component} from \"react\" \nimport Card from 'react-bootstrap/Card' \nimport CardDeck from 'react-bootstrap/CardDeck' \nimport Button from 'react-bootstrap/Button' \nimport EditAddressForm from \"./EditAddressForm\"\n\nclass Address extends Component {\n    state = {\n        displayAddress: false \n    }\n\n    handleDisplayAddress = () => {\n        const val = this.state.displayAddress \n        this.setState({\n            displayAddress: !val \n        })\n    }\n\n    handleDelete = (e) => {\n        this.props.deleteAddress(this.props.address.id) \n    }\n\n    render() {\n        return (\n            <CardDeck>\n                <Card>\n                    <Card.Body>\n                        <Card.Title>{this.props.address.address_type}</Card.Title>\n                        <Card.Text>{this.props.address.address}, {this.props.address.city}, {this.props.address.state},\n                        {this.props.address.country}, {this.props.address.zipcode}</Card.Text> \n                        {this.state.displayAddress ? <EditAddressForm updateAddress={this.props.updateAddress} key={this.props.address.id} address={this.props.address} /> : null} \n                        <Card.Text><Button onClick={this.handleDisplayAddress} variant=\"info\">Edit Address</Button></Card.Text>\n                        <Card.Text><Button onClick={this.handleDelete} variant=\"danger\">Delete Address</Button></Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n        )\n    }\n}\n\nexport default Address ","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button' \n\nclass WorkExperienceForm extends Component {\n    state = {\n        chef_type: \"\",\n        experience: \"\",\n        employer_name: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        current_workplace: \"\",\n        title: \"\",\n        description: \"\",\n        city: \"\", \n        state: \"\",\n        country: \"\"\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        this.props.addExperience({\n            chef_type: e.target.chef_type.value, \n            experience: e.target.experience.value, \n            employer_name: e.target.employer_name.value, \n            start_date: e.target.start_date.value, \n            end_date: e.target.end_date.value, \n            current_workplace: e.target.current_workplace.value, \n            title: e.target.title.value, \n            description: e.target.description.value, \n            city: e.target.city.value, \n            state: e.target.state.value, \n            country: e.target.country.value \n        })\n        this.setState({\n            chef_type: \"\",\n            experience: \"\",\n            employer_name: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            current_workplace: \"\",\n            title: \"\",\n            description: \"\",\n            city: \"\", \n            state: \"\",\n            country: \"\"\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value \n        })\n    }\n\n    render() {\n        const {chef_type, experience, employer_name, start_date, end_date, current_workplace, title, description, city, state, country} = this.state \n        return (\n            <Form onSubmit={(e) => this.handleSubmit(e)}>\n                <Form.Group controlId=\"formGroupChefType\">\n                    <Form.Label>Chef Type</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter what type of chef you are\" name=\"chef_type\" value={chef_type} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupExperience\">\n                    <Form.Label>Years of Experience</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your years of experience\" name=\"experience\" value={experience} />  \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEmployerName\"> \n                    <Form.Label>Emplyoer Name</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your Employer's name\" name=\"employer_name\" value={employer_name} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupStartDate\">\n                    <Form.Label>Start Date</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your Start Date\" name=\"start_date\" value={start_date} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEndDate\">\n                    <Form.Label>End Date</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your End Date\" name=\"end_date\" value={end_date} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCurrentWorkplace\"> \n                    <Form.Label>Current Workplace</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your Current Workplace\" name=\"current_workplace\" value={current_workplace} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupTitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your Title\" name=\"title\" value={title} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupDescription\">\n                    <Form.Label>Description</Form.Label> \n                    <Form.Control onChange={this.handleChange} as=\"textarea\" rows={10} placeholder=\"Please enter your Description\" name=\"description\" value={description} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the city\" name=\"city\" value={city} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your state\" name=\"state\" value={state} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCountry\">\n                    <Form.Label>Country</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the Country\" name=\"country\" value={country} />  \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n\n}\n\nexport default WorkExperienceForm","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button' \n\nclass EditWorkExperienceForm extends Component {\n    state = {\n        work_experience: {\n            id: this.props.work_experience.id,\n            chef_type: this.props.work_experience.chef_type,\n            experience: this.props.work_experience.experience,\n            employer_name: this.props.work_experience.employer_name,\n            start_date: this.props.work_experience.start_date,\n            end_date: this.props.work_experience.end_date,\n            current_workplace: this.props.work_experience.current_workplace,\n            title: this.props.work_experience.title,\n            description: this.props.work_experience.description,\n            city: this.props.work_experience.city, \n            state: this.props.work_experience.state,\n            country: this.props.work_experience.country \n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        this.props.updateExperience(this.state.work_experience)\n    }\n\n    handleChange = (e) => {\n        e.persist() \n\n        this.setState(prevState => ({\n            work_experience: {...prevState.work_experience, [e.target.name]: e.target.value} \n        }))\n    }\n\n    render() {\n        const {chef_type, experience, employer_name, start_date, end_date, current_workplace, title, description, city, state, country} = this.state.work_experience \n        return (\n            <Form onSubmit={(e) => this.handleSubmit(e)}>\n                <Form.Group controlId=\"formGroupChefType\">\n                    <Form.Label>Chef Type</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter what type of chef you are\" name=\"chef_type\" value={chef_type} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupExperience\">\n                    <Form.Label>Years of Experience</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your years of experience\" name=\"experience\" value={experience} />  \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEmployerName\"> \n                    <Form.Label>Emplyoer Name</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your Employer's name\" name=\"employer_name\" value={employer_name} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupStartDate\">\n                    <Form.Label>Start Date</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your Start Date\" name=\"start_date\" value={start_date} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEndDate\">\n                    <Form.Label>End Date</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your End Date\" name=\"end_date\" value={end_date} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCurrentWorkplace\"> \n                    <Form.Label>Current Workplace</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your Current Workplace\" name=\"current_workplace\" value={current_workplace} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupTitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your Title\" name=\"title\" value={title} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupDescription\">\n                    <Form.Label>Description</Form.Label> \n                    <Form.Control onChange={this.handleChange} as=\"textarea\" rows={10} placeholder=\"Please enter your Description\" name=\"description\" value={description} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the city\" name=\"city\" value={city} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your state\" name=\"state\" value={state} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCountry\">\n                    <Form.Label>Country</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the Country\" name=\"country\" value={country} />  \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n\n}\n\nexport default EditWorkExperienceForm","import React, {Component} from \"react\" \nimport Card from 'react-bootstrap/Card' \nimport CardDeck from 'react-bootstrap/CardDeck' \nimport Button from 'react-bootstrap/Button' \nimport EditWorkExperienceForm from './EditWorkExperienceForm' \n\nclass WorkExperience extends Component {\n    state = {\n        displayExperience: false \n    }\n\n    handleDisplayExperience = () => {\n        const val = this.state.displayExperience \n        this.setState({\n            displayExperience: !val \n        })\n    }\n\n    handleDelete = (e) => {\n        this.props.deleteExperience(this.props.work_experience.id) \n    }\n\n    render() {\n        return (\n            <CardDeck>\n                <Card>\n                    <Card.Body>\n                        <Card.Title> {this.props.work_experience.title}, {this.props.work_experience.current_workplace} - ({this.props.work_experience.start_date} - {this.props.work_experience.end_date})</Card.Title> \n                        <Card.Text>Years of experience: {this.props.work_experience.experience}</Card.Text> \n                        <Card.Text>Employer Name: {this.props.work_experience.employer_name}</Card.Text> \n                        <Card.Text>Location: {this.props.work_experience.city}, {this.props.work_experience.state}, {this.props.work_experience.country}</Card.Text> \n                        <Card.Text>Description: {this.props.work_experience.description}</Card.Text>\n                        {this.state.displayExperience ? <EditWorkExperienceForm updateExperience={this.props.updateExperience} key={this.props.work_experience.id} work_experience={this.props.work_experience} />: null} \n                        <Card.Text><Button onClick={this.handleDisplayExperience} variant=\"info\">Edit Work Experience</Button></Card.Text>\n                        <Card.Text><Button onClick={this.handleDelete} variant=\"danger\">Delete Work Experience</Button></Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n        )\n    }\n}\n\nexport default WorkExperience","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button'\n\nclass EducationForm extends Component {\n    state = {\n        description: '',\n        entry_date: '',\n        end_date: '', \n        enrollment_status: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n\n        this.props.addEducation({\n            description: e.target.description.value, \n            entry_date: e.target.entry_date.value, \n            end_date: e.target.end_date.value, \n            enrollment_status: e.target.enrollment_status.value \n        })\n        this.setState({\n            description: '',\n            entry_date: '',\n            end_date: '', \n            enrollment_status: ''\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value \n        })\n    }\n\n    render() {\n        const {description, entry_date, end_date, enrollment_status} = this.state \n        return (\n            <Form onSubmit={(e) => this.handleSubmit(e)}>\n                <Form.Group controlId=\"formGroupDescription\">\n                    <Form.Label>Description</Form.Label> \n                    <Form.Control onChange={this.handleChange} as=\"textarea\" rows={10} placeholder=\"Please enter your college name and degree\" name=\"description\" value={description} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEntryDate\">\n                    <Form.Label>Entry Date</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the entry date\" name=\"entry_date\" value={entry_date} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEndDate\">\n                    <Form.Label>End Date</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the end date\" name=\"end_date\" value={end_date} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEnrollmentStatus\">\n                    <Form.Label>Enrollment Status</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your enrollment status\" name=\"enrollment_status\" value={enrollment_status} /> \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nexport default EducationForm ","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button'\n\nclass EditEducationForm extends Component {\n    state = {\n        education: {\n            id: this.props.education.id, \n            description: this.props.education.description, \n            entry_date: this.props.education.entry_date, \n            end_date: this.props.education.end_date, \n            enrollment_status: this.props.education.enrollment_status \n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n\n        this.props.updateEducation(this.state.education) \n    }\n\n    handleChange = (e) => {\n        e.persist() \n\n        this.setState(prevState => ({\n            education: {...prevState.education, [e.target.name]: e.target.value} \n        }))\n    }\n\n    render() {\n        const {description, entry_date, end_date, enrollment_status} = this.state.education  \n        return (\n            <Form onSubmit={(e) => this.handleSubmit(e)}>\n                <Form.Group controlId=\"formGroupDescription\">\n                    <Form.Label>Description</Form.Label> \n                    <Form.Control onChange={this.handleChange} as=\"textarea\" rows={10} placeholder=\"Please enter your college name and degree\" name=\"description\" value={description} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEntryDate\">\n                    <Form.Label>Entry Date</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the entry date\" name=\"entry_date\" value={entry_date} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEndDate\">\n                    <Form.Label>End Date</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the end date\" name=\"end_date\" value={end_date} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupEnrollmentStatus\">\n                    <Form.Label>Enrollment Status</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter your enrollment status\" name=\"enrollment_status\" value={enrollment_status} /> \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nexport default EditEducationForm","import React, {Component} from \"react\" \nimport Card from 'react-bootstrap/Card' \nimport CardDeck from 'react-bootstrap/CardDeck' \nimport Button from 'react-bootstrap/Button' \nimport EditEducationForm from \"./EditEducationForm\"\n\nclass Education extends Component {\n    state = {\n        displayEducation: false \n    }\n\n    handleDisplayEducation = () => {\n        const val = this.state.displayEducation \n        this.setState({\n            displayEducation: !val \n        })\n    }\n\n    handleDelete = () => {\n        this.props.deleteEducation(this.props.education.id) \n    }\n\n    render() {\n        return (\n            <CardDeck>\n                <Card>\n                    <Card.Body>\n                        <Card.Title>{this.props.education.enrollment_status} - ({this.props.education.entry_date} - {this.props.education.end_date} </Card.Title>\n                        <Card.Text>{this.props.education.description}</Card.Text>\n                        {this.state.displayEducation ? <EditEducationForm updateEducation={this.props.updateEducation} education={this.props.education} key={this.props.education.id} /> : null} \n                        <Card.Text><Button onClick={this.handleDisplayEducation} variant=\"info\">Edit Education</Button></Card.Text> \n                        <Card.Text><Button onClick={this.handleDelete} variant=\"danger\">Delete Education</Button></Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n        )\n    }\n}\n\nexport default Education ","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button'\n\nclass AwardForm extends Component {\n    state = {\n        description: '', \n        received_date: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        this.props.addAward({\n            description: e.target.description.value,\n            received_date: e.target.received_date.value \n        })\n        this.setState({\n            description: '',\n            received_date: '' \n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value \n        })\n    }\n\n    render() {\n        const {description, received_date} = this.state \n        return (\n            <Form onSubmit={(e) => this.handleSubmit(e)}>\n                <Form.Group controlId=\"formGroupDescription\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" rows={10} placeholder=\"Please enter the Award's description\" name=\"description\" value={description} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupReceivedDate\">\n                    <Form.Label>Received Date</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the date you received the award on\" name=\"received_date\" value={received_date} /> \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nexport default AwardForm ","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button' \n\nclass EditAwardForm extends Component {\n    state = {\n        award: {\n            id: this.props.award.id, \n            description: this.props.award.description, \n            received_date: this.props.award.received_date\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        this.props.updateAward(this.state.award) \n    }\n\n    handleChange = (e) => {\n        e.persist(); \n\n        this.setState(prevState => ({\n            award: {...prevState.award, [e.target.name]: e.target.value}\n        }))\n    } \n\n    render() {\n        const {description, received_date} = this.state.award  \n        return (\n            <Form onSubmit={(e) => this.handleSubmit(e)}>\n                <Form.Group controlId=\"formGroupDescription\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" rows={10} placeholder=\"Please enter the Award's description\" name=\"description\" value={description} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupReceivedDate\">\n                    <Form.Label>Received Date</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the date you received the award on\" name=\"received_date\" value={received_date} /> \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nexport default EditAwardForm","import React, {Component} from \"react\" \nimport Card from 'react-bootstrap/Card' \nimport CardDeck from 'react-bootstrap/CardDeck' \nimport Button from 'react-bootstrap/Button' \nimport EditAwardForm from \"./EditAwardForm\"\n\nclass Award extends Component {\n    state = {\n        displayAward: false \n    }\n\n    handleDisplayAward = () => {\n        const val = this.state.displayAward \n        this.setState({\n            displayAward: !val \n        })\n    } \n\n    handleDelete = (e) => {\n        this.props.deleteAward(this.props.award.id)\n    }\n\n    render() {\n        return (\n            <CardDeck>\n                <Card>\n                    <Card.Body>\n                        <Card.Title>Award earned - {this.props.award.received_date}</Card.Title>\n                        <Card.Text>Description: {this.props.award.description}</Card.Text>\n                        {this.state.displayAward ? <EditAwardForm updateAward={this.props.updateAward} award={this.props.award} key={this.props.award.id} /> : null}\n                        <Card.Text><Button onClick={this.handleDisplayAward} variant=\"info\">Edit Award</Button></Card.Text>\n                        <Card.Text><Button onClick={this.handleDelete} variant=\"danger\">Delete Award</Button></Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n        )\n    }\n}\n\nexport default Award ","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass EditUserForm extends Component {\n    state = {\n        user: {\n            id: this.props.user.id, \n            name: this.props.user.name, \n            email: this.props.user.email, \n            password: this.props.user.password, \n            image_1: this.props.user.image_1, \n            image_2: this.props.user.image_2  \n        }\n    }\n\n    handleSubmit = (e) => {\n        this.props.updateUser(this.state.user) \n    }\n\n    handleChange = (e) => {\n        e.persist(); \n\n        this.setState(prevState => ({\n            user: {...prevState.user, [e.target.name]: e.target.value}\n        }))\n    }\n\n    render() {\n        const {name, email, password, image_1, image_2} = this.state.user \n        return(\n        <Form onSubmit={this.handleSubmit}>  \n            <Form.Group controlId=\"formGroupName\">\n                <Form.Label>Name</Form.Label> \n                <Form.Control onChange={this.handleChange} type=\"text\"  name=\"name\" value={name} /> \n            </Form.Group>\n            <Form.Group controlId=\"formGroupUsername\">\n                <Form.Label>Username(email): </Form.Label> \n                <Form.Control onChange={this.handleChange} type=\"text\"  name=\"email\" value={email} /> \n            </Form.Group>\n            <Form.Group controlId=\"formGroupPassword\">\n                <Form.Label>Password</Form.Label> \n                <Form.Control onChange={this.handleChange} type=\"password\" name=\"password\" value={password} />\n            </Form.Group>\n            <Form.Group controlId=\"formGroupImage1\">\n                <Form.Label>Image 1</Form.Label> \n                <Form.Control onChange={this.handleChange} type=\"text\" name=\"image_1\" value={image_1} />\n            </Form.Group>\n            <Form.Group controlId=\"formGroupImage1\">\n                <Form.Label>Image 2</Form.Label> \n                <Form.Control onChange={this.handleChange} type=\"text\" name=\"image_2\" value={image_2} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Form>\n        )\n    }\n}\n\nexport default EditUserForm","import React, {Component} from 'react'  \nimport Button from 'react-bootstrap/Button' \nimport AddressForm from './AddressForm' \nimport Address from './Address'\nimport WorkExperienceForm from './WorkExperienceForm'\nimport WorkExperience from './WorkExperience'\nimport EducationForm from './EducationForm'\nimport Education from './Education'\nimport AwardForm from './AwardForm'\nimport Award from './Award'\nimport EditUserForm from './EditUserForm'\nimport Image from 'react-bootstrap/Image'\nconst addresses_url = \"https://chefsworld-backend.herokuapp.com/addresses\" \nconst experiences_url = \"https://chefsworld-backend.herokuapp.com/work_experiences\" \nconst educations_url = \"https://chefsworld-backend.herokuapp.com/educations\"\nconst awards_url = \"https://chefsworld-backend.herokuapp.com/awards\"\n\nclass ProfileContainer extends Component {\n    state = {\n        displayAddress: false, \n        displayExperience: false, \n        displayEducation: false, \n        displayAward: false, \n        displayUser: false,\n        displayImage: true,   \n        user: this.props.user \n    }\n\n    handleDisplayAddress = () => {\n        const val = this.state.displayAddress \n        this.setState({\n            displayAddress: !val \n        })\n    }\n\n    handleDisplayImage = () => {\n        const val = this.state.displayImage \n        this.setState({\n            displayImage: !val \n        })\n    }\n\n    handleDisplayExperience = () => {\n        const val = this.state.displayExperience\n        this.setState({\n            displayExperience: !val \n        })\n    }\n\n    handleDisplayEducation = () => {\n        const val = this.state.displayEducation \n        this.setState({\n            displayEducation: !val \n        })\n    }\n\n    handleDisplayUser = () => {\n        const val = this.state.displayUser \n        this.setState({\n            displayUser: !val \n        })\n    }\n\n    handleDisplayAward = () => {\n        const val = this.state.displayAward \n        this.setState({\n            displayAward: !val \n        })\n    }\n\n    addAddress = (address) => {\n        fetch(addresses_url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json', \n                'Authorization': this.props.token\n            },\n            body: JSON.stringify(address) \n        })\n        .then(res => res.json()) \n        .then(newlyCreatedAddress => {\n            this.props.addOneAddress(newlyCreatedAddress)\n        })\n    }\n\n    addExperience = (work_experience) => {\n        fetch(experiences_url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                'Authorization': this.props.token \n            },\n            body: JSON.stringify(work_experience) \n        })\n        .then(res => res.json()) \n        .then(newlyCreatedExperience => {\n            this.props.addOneExperience(newlyCreatedExperience)\n        })\n    } \n\n    addEducation = (education) => {\n        fetch(educations_url, {\n            method: \"POST\", \n            headers: {\n                'Content-Type': 'application/json', \n                Accept: 'application/json', \n                'Authorization': this.props.token\n            },\n            body: JSON.stringify(education) \n        })\n        .then(res => res.json()) \n        .then(newlyCreatedEducation => {\n            this.props.addOneEducation(newlyCreatedEducation) \n        })\n    }\n\n    addAward = (award) => {\n        fetch(awards_url, {\n            method: \"POST\", \n            headers: {\n                'Content-Type': 'application/json', \n                Accept: 'application/json', \n                'Authorization': this.props.token \n            },\n            body: JSON.stringify(award) \n        })\n        .then(res => res.json()) \n        .then(newlyCreatedAward => {\n            this.props.addOneAward(newlyCreatedAward) \n        })\n    }\n\n    \n\n    updateAddress = address => {\n        fetch(`${addresses_url}/${address.id}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                'Authorization': this.props.token\n            },\n            body: JSON.stringify(address)  \n        })\n        .then(res => res.json()) \n        .then((updatedAddressObject) => {\n            this.props.updateOneAddress(updatedAddressObject)\n        })\n    }\n\n    updateExperience = work_experience => {\n        fetch(`${experiences_url}/${work_experience.id}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                'Authorization': this.props.token \n            },\n            body: JSON.stringify(work_experience) \n        })\n        .then(res => res.json()) \n        .then(updatedWorkExperienceObject => {\n            this.props.updateOneExperience(updatedWorkExperienceObject) \n        })\n    }\n\n    updateEducation = education => {\n        fetch(`${educations_url}/${education.id}`, {\n            method: \"PATCH\", \n            headers: {\n                'Content-Type': 'application/json', \n                Accept: 'application/json', \n                'Authorization': this.props.token \n            }, \n            body: JSON.stringify(education) \n        })\n        .then(res => res.json()) \n        .then(updatedEducationObject => {\n            this.props.updateOneEducation(updatedEducationObject)\n        })\n    }\n\n    updateAward = award => {\n        fetch(`${awards_url}/${award.id}`, {\n            method: \"PATCH\", \n            headers: {\n                'Content-Type': 'application/json', \n                Accept: 'application/json', \n                'Authorization': this.props.token \n            },\n            body: JSON.stringify(award)\n        })\n        .then(res => res.json()) \n        .then(updatedAwardObject => {\n            this.props.updateOneAward(updatedAwardObject) \n        })\n    }\n\n    deleteAddress = (id) => {\n        fetch(`${addresses_url}/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Authorization': this.props.token\n            }\n        })\n        .then(res => res.json()) \n        .then((deletedAddress) => {\n            this.props.deleteAddressFromUser(id) \n        })\n    }\n\n    deleteExperience = (id) => {\n        fetch(`${experiences_url}/${id}`, {\n            method: \"DELETE\", \n            headers: {\n                'Authorization': this.props.token \n            }\n        })\n        .then(res => res.json()) \n        .then(deletedWorkExperience => {\n            this.props.deleteWorkExperienceFromUser(id) \n        })\n    }\n\n    deleteEducation = (id) => {\n        fetch(`${educations_url}/${id}`, {\n            method: \"DELETE\", \n            headers: {\n                'Authorization': this.props.token \n            }\n        })\n        .then(res => res.json()) \n        .then(deletedEducation => {\n            this.props.deleteEducationFromUser(id) \n        })\n    }\n\n    deleteAward = (id) => {\n        fetch(`${awards_url}/${id}`, {\n            method: \"DELETE\", \n            headers: {\n                'Authorization': this.props.token \n            }\n        })\n        .then(res => res.json()) \n        .then(deletedAward => {\n            this.props.deleteAwardFromUser(id) \n        })\n    }\n\n    render() { \n        return (\n            <div className=\"container\"> \n                {this.state.displayUser ? <EditUserForm updateUser={this.props.updateUser} user={this.props.user} key={this.props.user.id} /> : null} \n                <Button variant=\"info\" onClick={this.handleDisplayUser}>Edit User</Button>\n                <h2 className=\"userinfo\">{this.state.user.name}&apos;s Profile</h2>\n                <Image src={this.state.displayImage ? this.props.user.image_1 : this.props.user.image_2} onClick={(e) => this.handleDisplayImage(e)} thumbnail/> \n                {this.state.displayAddress ? <AddressForm addAddress={this.addAddress} token={this.props.token} /> : null } \n                <Button variant=\"primary\" onClick={this.handleDisplayAddress}>Add an Address</Button>  \n                {this.props.user.addresses.map(address => <Address address={address} key={address.id} updateAddress={this.updateAddress} token={this.props.token} deleteAddress={this.deleteAddress} />)} \n                {this.state.displayEducation ? <EducationForm addEducation={this.addEducation} token={this.props.token} /> : null} \n                <Button variant=\"primary\" onClick={this.handleDisplayEducation}>Add Education</Button> \n                {this.props.user.educations.map(education => <Education education={education} key={education.id} updateEducation={this.updateEducation} deleteEducation={this.deleteEducation} token={this.props.token} />)} \n                {this.state.displayExperience ? <WorkExperienceForm addExperience={this.addExperience} token={this.props.token} /> : null} \n                <Button variant=\"primary\" onClick={this.handleDisplayExperience}>Add Work Experience</Button> \n                {this.props.user.work_experiences.map(work_experience => <WorkExperience work_experience={work_experience} key={work_experience.id} updateExperience={this.updateExperience} deleteExperience={this.deleteExperience} token={this.props.token} />)}\n                {this.state.displayAward ? <AwardForm addAward={this.addAward} token={this.props.token} /> : null} \n                <Button variant=\"primary\" onClick={this.handleDisplayAward}>Add Award</Button> \n                {this.props.user.awards.map(award => <Award award={award} key={award.id} updateAward={this.updateAward} deleteAward={this.deleteAward} token={this.props.token} />)}  \n            </div>\n        ); \n    }\n}\n\nexport default ProfileContainer ","import React from 'react';\nimport {NavLink} from 'react-router-dom' \nimport Nav from 'react-bootstrap/Nav' \n\nconst NavBar = (props) => {\n    return (\n        <Nav fill variant=\"tabs\" defaultActiveKey=\"/home\">\n            <Nav.Item>\n                <NavLink to=\"/\">Home</NavLink>\n            </Nav.Item> \n            <Nav.Item>\n                <NavLink to=\"/register\">Register</NavLink>\n            </Nav.Item> \n            <Nav.Item>\n                <NavLink to=\"/recipes\">Recipes</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n                <NavLink to=\"/profile\">Profile</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n            {props.user ? <NavLink to=\"/logout\" onClick={props.clickHandler}>Logout</NavLink>:\n                <NavLink to=\"/login\">Login</NavLink>\n            }   \n            </Nav.Item>\n        </Nav>\n    );\n}\n\nexport default NavBar; ","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button' \nclass LoginForm extends Component {\n\n  state = {\n    email: \"\",\n    password: \"\"\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.handleSubmit(this.state)\n  }\n\n  handleChange = (e) => {\n    let {name, value} = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    let {email, password} = this.state\n\n    return (\n      <div className=\"container\">\n        <Form onSubmit={this.handleSubmit}> \n          <h1>Login Form</h1>\n          <Form.Group controlId=\"formGroupUsername\">\n            <Form.Label>Username(email): </Form.Label> \n            <Form.Control onChange={this.handleChange} type=\"text\"  name=\"email\" value={email} /> \n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Password</Form.Label> \n            <Form.Control onChange={this.handleChange} type=\"password\"  name=\"password\" value={password} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n\n}\n\nexport default LoginForm;\n","import React, {Component} from 'react'\n\nclass SearchBar extends Component {\n    render() {\n        return (\n            <div className=\"search\">\n                <input onChange={e => this.props.handleChange(e)} className=\"searchTerm\" type='text' name='search' value={this.props.searchTerm} /> \n            </div>\n        ); \n    }\n}\n\nexport default SearchBar","import React, {Component} from \"react\" \nimport Card from 'react-bootstrap/Card' \nimport CardDeck from 'react-bootstrap/CardDeck' \nimport Button from 'react-bootstrap/Button' \n\nclass Comment extends Component {\n    state = {\n        display: false \n    }\n\n    handleDisplay = () => {\n        const val = this.state.display \n        this.setState({\n            display: !val \n        })\n    }\n    handleLike = (e) => {\n        this.props.increaseLikes(this.props.comment) \n    }\n\n    handleDelete = (e) => {\n        this.props.deleteComment(this.props.comment.id) \n    }\n\n    render() {\n        return (\n            <CardDeck>\n                <Card>\n                    <Card.Body>\n                        <Card.Title>{this.props.comment.user.name}</Card.Title>\n                        <Card.Text>{this.props.comment.recipe.label}</Card.Text>\n                        <Card.Text>{this.props.comment.content}</Card.Text>\n                        <Card.Text><Button onClick={(e) => this.handleLike(e)}>Like{'♥'}</Button>{this.props.comment.likes}</Card.Text> \n                        <Card.Text><Button onClick={this.handleDelete} variant=\"danger\">Delete Comment</Button></Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n        )\n    }\n}\n\nexport default Comment ","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button' \n\nclass CommentForm extends Component {\n    state = {\n        content: \"\",\n        likes: 0 \n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        this.props.addComment({\n            user_id: this.props.userId,\n            recipe_id: this.props.recipeId, \n            content: e.target.content.value, \n            likes: e.target.likes.value \n        }) \n        this.setState({\n            content: \"\",\n            likes: 0 \n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value \n        })\n    }\n\n    render() {\n        const {content, likes} = this.state \n        return (\n            <Form onSubmit={(e) => this.handleSubmit(e)}>\n                <Form.Group controlId=\"formGroupContent\">\n                    <Form.Label>Content</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" type=\"text\" placeholder=\"Please enter your comment\" rows={10} value={content} name=\"content\" /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupLikes\">\n                    <Form.Label>Likes</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"number\" value={likes} name=\"likes\" /> \n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nexport default CommentForm ","import React, {Component} from 'react' \nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button'  \n\n\nclass EditRecipeForm extends Component {\n    state = {\n        recipe: { \n            id: this.props.recipe.id, \n            label: this.props.recipe.label,\n            user_id: this.props.userId, \n            cuisine: this.props.recipe.cuisine,\n            meal: this.props.recipe.meal,\n            dish: this.props.recipe.dish,\n            ingredients: this.props.recipe.ingredients,\n            image_url: this.props.recipe.image_url,\n            source: this.props.recipe.source,\n            source_url: this.props.recipe.source_url,\n            diet_labels: this.props.recipe.diet_labels,\n            health_labels: this.props.recipe.health_labels,\n            cautions: this.props.recipe.cautions \n        }\n    } \n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        this.props.updateRecipe(this.state.recipe) \n        console.log(this.props.updateRecipe(this.state.recipe)) \n    }\n\n   \n\n    handleChange = (e) => {\n        e.persist(); \n\n        this.setState(prevState => ({\n            recipe: {...prevState.recipe, [e.target.name]: e.target.value}\n        }))\n    } \n\n    render() {\n        return (\n            <Form onSubmit={e => this.handleSubmit(e)} >\n                <Form.Group controlId=\"formGroupLabel\">\n                    <Form.Label>Label</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the recipe label\" name=\"label\" value={this.state.recipe.label} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCuisine\">\n                    <Form.Label>Cuisine</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the cuisine type\" name=\"cuisine\" value={this.state.recipe.cuisine} /> \n                </Form.Group> \n                <Form.Group controlId=\"formGroupMeal\">\n                    <Form.Label>Meal</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the meal type\" name=\"meal\" value={this.state.recipe.meal} /> \n                </Form.Group> \n                <Form.Group controlId=\"formGroupDish\">\n                    <Form.Label>Dish</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the dish type\" name=\"dish\" value={this.state.recipe.dish} /> \n                </Form.Group> \n                <Form.Group controlId=\"formGroupIngredients\">\n                    <Form.Label>Ingredients</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" placeholder=\"Please enter the recipe's ingredients\" rows={10} name=\"ingredients\" value={this.state.recipe.ingredients} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupImageUrl\">\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the image url of the recipe\" name=\"image_url\" value={this.state.recipe.image_url} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupSource\">\n                    <Form.Label>Source</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the source of the recipe\" name=\"source\" value={this.state.recipe.source} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupSourceUrl\">\n                    <Form.Label>Source Url</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the source url of the recipe\" name=\"source_url\" value={this.state.recipe.source_url} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupDietLabels\">\n                    <Form.Label>Diet Labels</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" placeholder=\"Please enter the recipe's diet labels\" rows={10} name=\"diet_labels\" value={this.state.recipe.diet_labels} />  \n                </Form.Group>\n                <Form.Group controlId=\"formGroupHealthLabels\">\n                    <Form.Label>Health Labels</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" placeholder=\"Please enter the recipe's health labels\" rows={10} name=\"health_labels\" value={this.state.recipe.health_labels} />  \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCautions\">\n                    <Form.Label>Cautions</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" placeholder=\"Please enter the recipe's dietary restrictions\" rows={10} name=\"cautions\" value={this.state.recipe.cautions} />  \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button> \n            </Form>\n        )\n    }\n}\n\nexport default EditRecipeForm","import React, {Component} from \"react\"\nimport Card from 'react-bootstrap/Card' \nimport CardDeck from 'react-bootstrap/CardDeck' \nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Button from 'react-bootstrap/Button'\nimport Comment from '../CommentsComponents/Comment'\nimport CommentForm from '../CommentsComponents/CommentForm' \nimport EditRecipeForm from './EditRecipeForm'\nclass Recipe extends Component {\n    state = {\n        showSource: true, \n        display: false, \n        commentDisplay: false,   \n    } \n\n\n    handleClick = (e) => {\n        const val = this.state.showSource \n        this.setState({\n            showSource: !val \n        })\n    }\n\n    handleDisplay = () => {\n        const val = this.state.display \n        this.setState({\n            display: !val \n        })\n    } \n\n    handleCommentDisplay = () => {\n        const val = this.state.commentDisplay \n        this.setState({\n            commentDisplay: !val \n        })\n    }\n    handleDelete = (e) => {\n        this.props.deleteRecipe(this.props.recipe.id) \n    }\n\n    render() {\n        \n        return (\n            <div>\n                <CardDeck>\n                    <Card key={this.props.recipe.id}> \n                        <Card.Img variant=\"top\" onClick={(e) => this.handleClick(e)} src={this.props.recipe.image_url} /> \n                        <Card.Body>\n                            <Card.Title>{this.props.recipe.label} - {this.props.recipe.user.name}</Card.Title> \n                            <Card.Text>{this.props.recipe.cuisine}</Card.Text>\n                            <Card.Text>{this.props.recipe.meal}</Card.Text>\n                            <Card.Text>{this.props.recipe.dish}</Card.Text>\n                            {this.state.showSource ? <Card.Text>Source: {this.props.recipe.source}</Card.Text> : <Card.Link href={this.props.recipe.source_url}>Recipe Link</Card.Link>} \n                            <Card.Text>Ingredients: {this.props.recipe.ingredients.split(\",\").map(ingredient => \n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>{ingredient}</ListGroup.Item>\n                                </ListGroup>)}</Card.Text>\n                            <Card.Text>Diet Labels: {this.props.recipe.diet_labels.split(\",\").map(diet_label => \n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>{diet_label}</ListGroup.Item>\n                                </ListGroup>)}</Card.Text>\n                            <Card.Text>Cautions: {this.props.recipe.cautions.split(\",\").map(caution => \n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>{caution}</ListGroup.Item>\n                                </ListGroup> )}</Card.Text>\n                            {this.state.display ? <EditRecipeForm updateRecipe={this.props.updateRecipe} key={this.props.recipe.id} recipe={this.props.recipe}/> : null} \n                            <Card.Text><Button onClick={this.handleDisplay} variant=\"info\">Edit Recipe</Button></Card.Text>\n                            <Card.Text><Button variant=\"danger\" onClick={(e) => this.handleDelete(e)} key={this.props.recipe.id}>Delete Recipe</Button></Card.Text> \n                            <Card.Title>Comments</Card.Title>\n                            {this.props.recipe.comments.map(comment => <Comment key={comment.id} comment={comment} increaseLikes={this.props.increaseLikes} deleteComment={this.props.deleteComment} />)} \n                            {this.state.commentDisplay ? <CommentForm recipeId={this.props.recipe.id} addComment={this.props.addComment} /> : null} \n                            <Button onClick={this.handleCommentDisplay}>Add a Comment</Button>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n            </div>\n        )\n    }\n}\n\nexport default Recipe ","import React from 'react' \nimport Recipe from './Recipe' \n\nconst FilteredRecipesContainer = (props) => {\n    return (\n        <ul>\n            {props.recipes.map(recipe => <Recipe key={recipe.id} recipe={recipe}  updateRecipe={props.updateRecipe} deleteRecipe={props.deleteRecipe} addComment={props.addComment}  increaseLikes={props.increaseLikes} deleteComment={props.deleteComment} />)}  \n        </ul>\n    )\n}\n\nexport default FilteredRecipesContainer","import React, {Component} from 'react'\n\nclass Filter extends Component {\n    render() {\n        return (\n            <>\n            <nav>\n                <p>Filter by Cuisine Type: </p>\n                <select name=\"cuisine\" onChange={e => this.props.handleSelection(e)} className=\"map\">\n                    <option value=\"All\">All</option>\n                    <option value=\"american\">american</option> \n                    <option value=\"asian\">asian</option> \n                    <option value=\"british\">british</option> \n                    <option value=\"caribbean\">caribbean</option> \n                    <option value=\"central europe\">central europe</option> \n                    <option value=\"chinese\">chinese</option> \n                    <option value=\"eastern europe\">eastern europe</option> \n                    <option value=\"french\">french</option> \n                    <option value=\"indian\">indian</option> \n                    <option value=\"japanese\">japanese</option> \n                    <option value=\"kosher\">kosher</option> \n                    <option value=\"mediterranean\">mediterranean</option> \n                    <option value=\"mexican\">mexican</option> \n                    <option value=\"middle eastern\">middle eastern</option> \n                    <option value=\"nordic\">nordic</option> \n                    <option value=\"south american\">south american</option> \n                    <option value=\"south east asian\">south east asian</option>\n                    <option value=\"world\">world</option>\n                </select>\n                <p>Filter by Meal Type: </p> \n                <select name=\"meal\" onChange={e => this.props.handleSelection(e)} className=\"map\">\n                    <option value=\"All\">All</option>\n                    <option value=\"breakfast\">breakfast</option> \n                    <option value=\"breakfast,lunch/dinner\">breakfast,lunch/dinner</option>\n                    <option value=\"lunch/dinner\">lunch/dinner</option> \n                </select>\n            </nav>\n            </>\n        )\n    }\n}\n\nexport default Filter ","import React, {Component} from 'react'\nimport Form from 'react-bootstrap/Form' \nimport Button from 'react-bootstrap/Button' \n\nclass RecipeForm extends Component {\n    state = {\n        label: '',\n        cuisine: '',\n        meal: '',\n        dish: '',\n        ingredients: '',\n        image_url: '',\n        source: '',\n        source_url: '',\n        diet_labels: '',\n        health_labels: '',\n        cautions: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        this.props.addRecipe({\n            label: e.target.label.value,\n            user_id: this.props.userId, \n            cuisine: e.target.cuisine.value,\n            meal: e.target.meal.value,\n            dish: e.target.dish.value,\n            ingredients: e.target.ingredients.value,\n            image_url: e.target.image_url.value, \n            source: e.target.source.value, \n            source_url: e.target.source_url.value,\n            diet_labels: e.target.diet_labels.value, \n            health_labels: e.target.health_labels.value, \n            cautions: e.target.cautions.value \n        })\n        this.setState({\n            label: '',\n            cuisine: '',\n            meal: '',\n            dish: '',\n            ingredients: '',\n            image_url: '',\n            source: '',\n            source_url: '',\n            diet_labels: '',\n            health_labels: '',\n            cautions: ''\n        })\n    }\n\n    \n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value \n        })\n    }\n\n    render() {\n        const {label, cuisine, meal, dish, ingredients, image_url, source, source_url, diet_labels, health_labels, cautions} = this.state \n        return (\n            <Form onSubmit={e => this.handleSubmit(e)} >\n                <Form.Group controlId=\"formGroupLabel\">\n                    <Form.Label>Label</Form.Label> \n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the recipe label\" name=\"label\" value={label} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCuisine\">\n                    <Form.Label>Cuisine</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the cuisine type\" name=\"cuisine\" value={cuisine} /> \n                </Form.Group> \n                <Form.Group controlId=\"formGroupMeal\">\n                    <Form.Label>Meal</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the meal type\" name=\"meal\" value={meal} /> \n                </Form.Group> \n                <Form.Group controlId=\"formGroupDish\">\n                    <Form.Label>Dish</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the dish type\" name=\"dish\" value={dish} /> \n                </Form.Group> \n                <Form.Group controlId=\"formGroupIngredients\">\n                    <Form.Label>Ingredients</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" placeholder=\"Please enter the recipe's ingredients\" rows={10} name=\"ingredients\" value={ingredients} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupImageUrl\">\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the image url of the recipe\" name=\"image_url\" value={image_url} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupSource\">\n                    <Form.Label>Source</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the source of the recipe\" name=\"source\" value={source} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupSourceUrl\">\n                    <Form.Label>Source Url</Form.Label>\n                    <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Please enter the source url of the recipe\" name=\"source_url\" value={source_url} /> \n                </Form.Group>\n                <Form.Group controlId=\"formGroupDietLabels\">\n                    <Form.Label>Diet Labels</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" placeholder=\"Please enter the recipe's diet labels\" rows={10} name=\"diet_labels\" value={diet_labels} />  \n                </Form.Group>\n                <Form.Group controlId=\"formGroupHealthLabels\">\n                    <Form.Label>Health Labels</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" placeholder=\"Please enter the recipe's health labels\" rows={10} name=\"health_labels\" value={health_labels} />  \n                </Form.Group>\n                <Form.Group controlId=\"formGroupCautions\">\n                    <Form.Label>Cautions</Form.Label>\n                    <Form.Control onChange={this.handleChange} as=\"textarea\" placeholder=\"Please enter the recipe's dietary restrictions\" rows={10} name=\"cautions\" value={cautions} />  \n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\">Submit</Button> \n            </Form>\n        )\n    }\n}\n\nexport default RecipeForm","import React, {Component} from 'react'; \nimport axios from 'axios'\nimport ReactPaginate from 'react-paginate' \nimport SearchBar from './SearchBar';\nimport FilteredRecipesContainer from './FilteredRecipesContainer';\nimport {Redirect} from 'react-router-dom'\nimport Filter from './Filter';\nimport RecipeForm from './RecipeForm'\nimport Button from 'react-bootstrap/Button'\nconst recipes_url = \"https://chefsworld-backend.herokuapp.com/recipes\" \nconst comments_url = \"https://chefsworld-backend.herokuapp.com/comments\" \nclass RecipesContainer extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            offset: 0, \n            recipes: [],\n            perPage: 20, \n            currentPage: 0, \n            searchTerm: \"\", \n            cuisine: \"All\", \n            meal: \"All\",   \n            comments: [],\n            display: false, \n        }\n        this.handlePageClick = this.handlePageClick.bind(this); \n    }\n    handleDisplay = () => {\n        const val = !this.state.display \n        this.setState({\n            display: val \n        })\n    } \n\n    componentDidMount() {\n        this.receivedData() \n    }\n\n    receivedData = () => {\n        axios.get(recipes_url) \n        .then(res => {\n            const data = res.data;\n            this.setState({\n                pageCount: Math.ceil(data.length / this.state.perPage), \n                recipes: data \n            })\n        })\n    }\n\n    cuisineFilter = () => {\n        let {recipes, cuisine} = this.state \n        return cuisine === \"All\" ? recipes : recipes.filter(recipe => recipe.cuisine === cuisine) \n    } \n\n    \n\n    mealFilter = () => {\n        let {meal} = this.state \n        return meal === \"All\" ? this.cuisineFilter() : this.cuisineFilter().filter(recipe => recipe.meal === meal) \n    }\n\n    \n    filteredRecipes = () => {\n        let {searchTerm} = this.state   \n        let filteredRecipes = this.cuisineFilter().filter(recipe => recipe.label.toLowerCase().includes(searchTerm.toLowerCase())  \n        || recipe.dish.toLowerCase().includes(searchTerm.toLowerCase())) && \n        this.mealFilter().filter(recipe => recipe.label.toLowerCase().includes(searchTerm.toLowerCase())  \n        || recipe.dish.toLowerCase().includes(searchTerm.toLowerCase())) \n        return filteredRecipes\n    } \n\n    slicedRecipes = () => {\n        return this.filteredRecipes().slice(this.state.offset, this.state.offset + this.state.perPage)  \n    }\n\n    pageCount = () => {\n        let pageCount = Math.ceil(this.filteredRecipes().length / this.state.perPage) \n        return pageCount ? pageCount : undefined \n    }\n\n    handlePageClick = (e) => {\n        const selectedPage = e.selected; \n        const offset = selectedPage * this.state.perPage; \n        this.setState({\n            currentPage: selectedPage, \n            offset: offset \n        }, () => {\n            this.receivedData()\n        })\n    }\n\n    handleSearch = (e) => {\n        this.setState({\n            searchTerm: e.target.value \n        })\n    }\n\n    handleSelection = (e) => {\n        let {name, value} = e.target \n        this.setState({\n            [name]: value \n        })\n    }\n\n    // handleRecipePatch = (recipe) => {\n    //     recipe.user_id = this.props.userId \n    //     let fetchOptions = {\n    //         method: recipe.id ? 'PATCH' : 'POST', \n    //         headers: {\n    //             'Content-Type': 'application/json', \n    //             Accept: 'application/json' \n    //         }, \n    //         body: JSON.stringify(recipe) \n    //     }\n\n    //     if (recipe.id) {\n    //         fetch(`${recipes_url}/${recipe.id}`, fetchOptions) \n    //         .then(res => res.json()) \n    //         .then(newRecipe => {\n    //             let newRecipes = this.state.recipes.map(recipe => {\n    //                 if (recipe.id === newRecipe.id) {\n    //                     return newRecipe \n    //                 }\n    //                 else {\n    //                     return recipe \n    //                 }\n    //             })\n    //             this.setState({\n    //                 recipes: newRecipes \n    //             })\n    //         })\n    //     } \n    //     else {\n    //         fetch(recipes_url, fetchOptions) \n    //         .then(res => res.json()) \n    //         .then(json => {\n    //             const newRecipes = [...this.state.recipes, json] \n    //             this.setState({\n    //                 recipes: newRecipes \n    //             }) \n    //         })\n    //     }\n    // }\n\n    addRecipe = (recipe) => {\n        recipe.user_id = this.props.userId \n        fetch(recipes_url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json' \n            },\n            body: JSON.stringify(recipe) \n        })\n        .then(res => res.json()) \n        .then(json => {\n            const newRecipes = [...this.state.recipes, json] \n            this.setState({\n                recipes: newRecipes \n            })\n        })\n    }\n\n    updateRecipe = recipe => {\n        recipe.user_id = this.props.userId \n        fetch(`${recipes_url}/${recipe.id}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json' \n            },\n            body: JSON.stringify(recipe) \n        })\n        .then(res => res.json()) \n        .then(newRecipe => {\n            let newRecipes = this.state.recipes.map(recipe => {\n                if (recipe.id === newRecipe.id) {\n                    return newRecipe\n                }\n                else {\n                    return recipe \n                }\n            })\n            this.setState({\n                recipes: newRecipes \n            })\n        }) \n    }\n\n    deleteRecipe = (id) => {\n        fetch(`${recipes_url}/${id}`, {\n            method: \"DELETE\"\n        })\n        .then(res => {\n            const newRecipes = this.state.recipes.filter(recipe => recipe.id !== id) \n            this.setState({\n                recipes: newRecipes  \n            })\n        })\n         \n    } \n\n\n    addComment = (comment) => {\n        comment.user_id = this.props.userId \n        fetch(comments_url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json',\n                Accept: 'application/json' \n            },\n            body: JSON.stringify(comment) \n        })\n        .then(res => res.json()) \n        .then(data => {\n            const newRecipes = [...this.state.recipes] \n            newRecipes.find(recipe => recipe.id === comment.recipe_id).comments.push(data) \n            this.setState({recipes: newRecipes})  \n        })\n    }\n\n    increaseLikes = (comment) => {\n        fetch(`${comments_url}/${comment.id}`, {\n            method: \"PATCH\", \n            headers: {\n                'Content-Type': 'application/json',\n                Accept: \"application/json\" \n            },\n            body: JSON.stringify({\n                likes: comment.likes + 1\n            })\n        })\n        .then(res => res.json()) \n        .then(res => {\n            const newRecipes = [...this.state.recipes]\n            const recipeFound = newRecipes.find(recipe => recipe.id === comment.recipe.id) \n            const foundComment = recipeFound.comments.find(comment => comment.id === res.id) \n            foundComment.likes = res.likes \n            this.setState({\n                recipes: newRecipes \n            })\n        })\n    }\n\n    \n    deleteComment = (id) => {\n        fetch(`${comments_url}/${id}`, {\n            method: \"DELETE\"\n        })\n        .then(res => res.json()) \n        .then(this.removeDeletedComment) \n    }\n\n    removeDeletedComment = ({id, recipe}) => {\n        const newRecipes = [...this.state.recipes] \n        const foundRecipe = newRecipes.find(r => r.id === recipe.id) \n        const commentIndex = foundRecipe.comments.findIndex((comment) => comment.id === id) \n        console.log(commentIndex) \n        foundRecipe.comments.splice(commentIndex, 1) \n        this.setState({\n            recipes: newRecipes \n        })\n    }\n\n    render() {\n        console.log(this.filteredRecipes()) \n        return (\n            <div className=\"container\">\n            {this.props.user ? \n            <div>\n                <h1>Recipes</h1> \n                <ReactPaginate \n                    previousLabel={\"prev\"} \n                    nextLabel = {\"next\"} \n                    breakLabel = {\"...\"} \n                    breakClassName = {\"break-me\"} \n                    pageCount = {this.pageCount()} \n                    marginPagesDisplayed = {2} \n                    pageRangeDisplayed = {5} \n                    onPageChange = {this.handlePageClick} \n                    containerClassName = {\"pagination\"} \n                    subContainerClassName = {\"pages pagination\"} \n                    activeClassName = {\"active\"} /> \n                \n                {this.state.display ? <RecipeForm addRecipe={this.addRecipe} /> : null} \n                <Button variant=\"primary\" onClick={this.handleDisplay}>Add a Recipe</Button> \n                <SearchBar searchTerm={this.state.searchTerm} handleChange={this.handleSearch} /> \n                <Filter handleSelection={this.handleSelection} /> \n                <FilteredRecipesContainer recipes={this.slicedRecipes()} updateRecipe={this.updateRecipe} deleteRecipe={this.deleteRecipe} addComment={this.addComment} increaseLikes={this.increaseLikes} deleteComment={this.deleteComment}/> \n                <ReactPaginate \n                    previousLabel={\"prev\"} \n                    nextLabel = {\"next\"} \n                    breakLabel = {\"...\"} \n                    breakClassName = {\"break-me\"} \n                    pageCount = {this.pageCount()} \n                    marginPagesDisplayed = {2} \n                    pageRangeDisplayed = {5} \n                    onPageChange = {this.handlePageClick} \n                    containerClassName = {\"pagination\"} \n                    subContainerClassName = {\"pages pagination\"} \n                    activeClassName = {\"active\"} /> \n            </div>\n        \n            : \n            <Redirect to=\"/login\"/> \n            }\n        </div> \n        )\n    }\n}\n\nexport default RecipesContainer","import React, {Component} from 'react';\nimport SignupForm from './components/SignupForm'\nimport Home from './components/Home'\nimport ProfileContainer from './ProfileComponents/ProfileContainer'\nimport {Switch, Route} from 'react-router-dom'\nimport {withRouter} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'semantic-ui-css/semantic.min.css'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport NavBar from './components/NavBar'\nimport LoginForm from './components/LoginForm'\nimport RecipesContainer from './RecipesComponents/RecipesContainer' \nconst users_url = \"https://chefsworld-backend.herokuapp.com/users/\"\nclass App extends Component {\n  state = {\n    users: [], \n    user: {\n      id: 0,\n      email: \"\",\n      name: \"\",\n      image_1: \"\",\n      image_2: \"\",\n      addresses: [], \n      work_experiences: [], \n      educations: [], \n      awards: []\n    },\n    token: \"\"\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\")\n    if(token){\n      fetch(\"https://chefsworld-backend.herokuapp.com/users/stay_logged_in\",{\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then(r => r.json())\n      .then(this.handleResponse)\n    }\n  }\n\n  handleLoginSubmit = (userInfo) => {\n    fetch(\"https://chefsworld-backend.herokuapp.com/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n      .then(r => r.json())\n      .then(this.handleResponse)\n  }\n\n\n  handleRegisterSubmit = (userInfo) => {\n    fetch(users_url, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n      .then(r => r.json())\n      .then(this.handleResponse)\n  }\n\n  updateUser = user => {\n    fetch(`${users_url}/${user.id}`, {\n      method: \"PATCH\", \n      headers: {\n        'Content-Type': 'application/json', \n        Accept: 'application/json'\n      },\n      body: JSON.stringify(user) \n    })\n    .then(res => res.json()) \n    .then(updatedUserObject => {\n      this.updateOneUser(updatedUserObject)\n    })\n  }\n\n  updatedOneUser = updatedUserInstance => {\n    let newUsers = this.state.users.map(user => {\n      if (user.id === updatedUserInstance.id) {\n        return updatedUserInstance\n      }\n      else {\n        return user \n      }\n    })\n    this.setState({\n      users: newUsers \n    })\n  }\n\n  handleResponse = (resp) => {\n    if(resp.user){\n      localStorage.setItem(\"token\", resp.token)\n      this.setState(resp, () => {\n        this.props.history.push(\"/profile\")\n      })\n    } else {\n      // alert(resp.error)\n    }\n  }\n\n  renderForm = (routerProps) => {\n    if(routerProps.location.pathname === \"/login\"){\n      return <LoginForm \n        handleSubmit={this.handleLoginSubmit}\n      />\n    } else if (routerProps.location.pathname === \"/register\") {\n      return <SignupForm\n        handleSubmit={this.handleRegisterSubmit}\n      />\n    } \n    else if (routerProps.location.pathname === \"/logout\") {\n      return <LoginForm handleSubmit = {this.handleLoginSubmit} /> \n    }\n  }\n\n  addOneAddress = (address) => {\n    let newAddresses = [...this.state.user.addresses, address] \n    let newUser = {\n      ...this.state.user,\n      addresses: newAddresses \n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n\n  addOneExperience = (work_experience) => {\n    let newWorkExperiences = [...this.state.user.work_experiences, work_experience] \n    let newUser = {\n      ...this.state.user,\n      work_experiences: newWorkExperiences \n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n  addOneEducation = (education) => {\n    let newEducations = [...this.state.user.educations, education] \n    let newUser = {\n      ...this.state.user,\n      educations: newEducations \n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n  addOneAward = (award) => {\n    let newAwards = [...this.state.user.awards, award] \n    let newUser = {\n      ...this.state.user, \n      awards: newAwards \n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n  updateOneAddress = (updatedAddressInstance) => {\n    let newAddresses = this.state.user.addresses.map((address) => {\n      if (address.id === updatedAddressInstance.id) {\n        return updatedAddressInstance\n      }\n      else {\n        return address \n      }\n    })\n    let newUser = {\n      ...this.state.user,\n      addresses: newAddresses \n    } \n    this.setState({\n      user: newUser \n    })\n  } \n\n  updateOneExperience = (updatedWorkExperienceInstance) => {\n    let newWorkExperiences = this.state.user.work_experiences.map((work_experience) => {\n      if (work_experience.id === updatedWorkExperienceInstance.id) {\n        return updatedWorkExperienceInstance \n      }\n      else {\n        return work_experience\n      }\n    })\n    let newUser = {\n      ...this.state.user,\n      work_experiences: newWorkExperiences \n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n  updateOneEducation = (updatedEducationInstance) => {\n    let newEducations = this.state.user.educations.map(education => {\n      if (education.id === updatedEducationInstance.id) {\n        return updatedEducationInstance\n      }\n      else {\n        return education \n      }\n    })\n    let newUser = {\n      ...this.state.user, \n      educations: newEducations \n    }\n    this.setState({\n      user: newUser\n    })\n  }\n\n  updateOneAward = (updatedAwardInstance) => {\n    let newAwards = this.state.user.awards.map(award => {\n      if (award.id === updatedAwardInstance.id) {\n        return updatedAwardInstance \n      }\n      else {\n        return award \n      }\n    })\n    let newUser = {\n      ...this.state.user, \n      awards: newAwards \n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n  deleteAddressFromUser = (idFromChild) => {\n    let newAddresses = this.state.user.addresses.filter((address) => {\n      return address.id !== idFromChild\n    })\n    let newUser = {\n      ...this.state.user, \n      addresses: newAddresses\n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n  deleteWorkExperienceFromUser = (idFromChild) => {\n    let newWorkExperiences = this.state.user.work_experiences.filter((work_experience) => {\n      return work_experience.id !== idFromChild \n    })\n    let newUser = {\n      ...this.state.user,\n      work_experiences: newWorkExperiences \n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n  deleteEducationFromUser = (idFromChild) => {\n    let newEducations = this.state.user.educations.filter(education => {\n      return education.id !== idFromChild \n    })\n    let newUser = {\n      ...this.state.user,\n      educations: newEducations \n    }\n    this.setState({\n      user: newUser \n    })\n  }\n\n  deleteAwardFromUser = (idFromChild) => {\n    let newAwards = this.state.user.awards.filter(award => {\n      return award.id !== idFromChild \n    })\n    let newUser = {\n      ...this.state.user,\n      awards: newAwards \n    }\n    this.setState({\n      user: newUser  \n    })\n  }\n  \n\n  renderProfile = (routerProps) => {\n    if (this.state.token) {\n      return <ProfileContainer user={this.state.user} token={this.state.token} updateUser={this.updateUser} addOneAddress={this.addOneAddress} addOneExperience={this.addOneExperience} addOneEducation={this.addOneEducation} addOneAward={this.addOneAward} updateOneAddress={this.updateOneAddress} updateOneExperience={this.updateOneExperience} updateOneEducation={this.updateOneEducation} updateOneAward={this.updateOneAward} deleteAddressFromUser={this.deleteAddressFromUser} deleteWorkExperienceFromUser={this.deleteWorkExperienceFromUser} deleteEducationFromUser={this.deleteEducationFromUser} deleteAwardFromUser={this.deleteAwardFromUser} />  \n    }\n    else {\n      this.props.history.push(\"/login\") \n    }\n  }\n\n  logOutHandler = () => {\n    localStorage.removeItem(\"token\")\n    this.props.history.push(\"/login\") \n    this.setState({\n      user: null,\n      token: ''\n    })\n  } \n\n  render(){\n    return (\n      <div className=\"App\">\n            <Jumbotron > \n              <Container>\n                <h1 className=\"header\">Welcome to ChefsWorld</h1>\n                <NavBar user={this.state.user} clickHandler={this.logOutHandler}/> \n                  <Switch>\n                    <Route path=\"/login\" render={this.renderForm} /> \n                    <Route path=\"/logout\" render={this.renderForm} />  \n                    <Route path=\"/register\" render={this.renderForm} /> \n                    <Route path=\"/profile\" render={this.renderProfile} />\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/recipes\" render={() => <RecipesContainer user={this.state.user} userId={this.state.user.id} />} />\n                    <Route render={() => <p>Page not Found</p>} /> \n                  </Switch>\n              </Container>\n            </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n// BrowserRouter component\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>,\n document.getElementById('root'));\n"],"sourceRoot":""}